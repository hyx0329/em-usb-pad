[package]
name = "em-usb-pad"
version = "0.1.0"
edition = "2021"

[dependencies]
embassy-sync = { version = "0.1.0", path = "embassy/embassy-sync", features = ["defmt"] }
# embassy's core part
embassy-executor = { version = "0.1.0", path = "embassy/embassy-executor", features = ["arch-cortex-m", "executor-thread", "defmt", "integrated-timers"] }
embassy-time = { version = "0.1.0", path = "embassy/embassy-time", features = ["defmt", "defmt-timestamp-uptime", "tick-hz-32_768"] }
# through feature "memory-x", the corresponding memeory.x can be generated on the go
# unstable-pac is used to expose some timer registers
# exti is required to use interrupts
embassy-stm32 = { version = "0.1.0", path = "embassy/embassy-stm32", features = ["nightly", "defmt", "stm32f103c8", "unstable-pac", "memory-x", "time-driver-any", "exti"]  }
embassy-usb = { version = "0.1.0", path = "embassy/embassy-usb", features = ["defmt"] }
embassy-futures = { version = "0.1.0", path = "embassy/embassy-futures" }

# USB HID keyboard & etc.
usbd-hid = "0.6.1"

defmt = "0.3"
# RTT version requires a critical section implementation
defmt-rtt = "0.4"

# panic handler, print panic stack trace to probe-run through defmt's transport
panic-probe = { version = "0.3", features = ["print-defmt"] }

cortex-m = { version = "0.7.6", features = ["critical-section-single-core"] }
# minimal runtime
cortex-m-rt = "0.7.0"
embedded-hal = "0.2.6"
futures = { version = "0.3.17", default-features = false, features = ["async-await"] }
heapless = { version = "0.7.5", default-features = false }
nb = "1.0.0"

packed_struct = { version = "0.10", default-features = false, features = ["serde"] }
serde = { version = "1.0.152", default-features = false }
keypad = "0.2.2"

[profile.dev]
opt-level = "s"
